searchNodes=[{"ref":"Adventofcode.html","title":"Adventofcode","type":"module","doc":"Documentation for Adventofcode."},{"ref":"Adventofcode.html#hello/0","title":"Adventofcode.hello/0","type":"function","doc":"Hello world. Examples iex&gt; Adventofcode.hello() :world"},{"ref":"BitUtils.html","title":"BitUtils","type":"module","doc":""},{"ref":"BitUtils.html#chunks/2","title":"BitUtils.chunks/2","type":"function","doc":""},{"ref":"Day0.html","title":"Day0","type":"module","doc":""},{"ref":"Day0.html#parse_input/1","title":"Day0.parse_input/1","type":"function","doc":""},{"ref":"Day0.html#parse_input1/1","title":"Day0.parse_input1/1","type":"function","doc":""},{"ref":"Day0.html#parse_input2/1","title":"Day0.parse_input2/1","type":"function","doc":""},{"ref":"Day0.html#part1/0","title":"Day0.part1/0","type":"function","doc":""},{"ref":"Day0.html#part2/0","title":"Day0.part2/0","type":"function","doc":""},{"ref":"Day0.html#real_input/0","title":"Day0.real_input/0","type":"function","doc":""},{"ref":"Day0.html#real_input1/0","title":"Day0.real_input1/0","type":"function","doc":""},{"ref":"Day0.html#real_input2/0","title":"Day0.real_input2/0","type":"function","doc":""},{"ref":"Day0.html#sample/0","title":"Day0.sample/0","type":"function","doc":""},{"ref":"Day0.html#sample2/0","title":"Day0.sample2/0","type":"function","doc":""},{"ref":"Day0.html#sample_input/0","title":"Day0.sample_input/0","type":"function","doc":""},{"ref":"Day0.html#sample_input2/0","title":"Day0.sample_input2/0","type":"function","doc":""},{"ref":"Day0.html#solve/1","title":"Day0.solve/1","type":"function","doc":""},{"ref":"Day0.html#solve1/1","title":"Day0.solve1/1","type":"function","doc":""},{"ref":"Day0.html#solve2/1","title":"Day0.solve2/1","type":"function","doc":""},{"ref":"Day1.html","title":"Day1","type":"module","doc":""},{"ref":"Day1.html#calculate_additional_fuel/2","title":"Day1.calculate_additional_fuel/2","type":"function","doc":"Calculate the fuel required given a mass plus the additional fuel for carrying that fuel Examples iex&gt; Day1.calculate_additional_fuel(12) 2 iex&gt; Day1.calculate_additional_fuel(1969) 966 iex&gt; Day1.calculate_additional_fuel(100756) 50346"},{"ref":"Day1.html#calculate_fuel/1","title":"Day1.calculate_fuel/1","type":"function","doc":"Calculate the fuel required given a mass Examples iex&gt; Day1.calculate_fuel(12) 2 iex&gt; Day1.calculate_fuel(14) 2 iex&gt; Day1.calculate_fuel(1969) 654 iex&gt; Day1.calculate_fuel(100756) 33583"},{"ref":"Day1.html#parse_input/1","title":"Day1.parse_input/1","type":"function","doc":"Splits the input by newlines and converts each line to an integer"},{"ref":"Day1.html#part1/0","title":"Day1.part1/0","type":"function","doc":"Solves day 1 part 1"},{"ref":"Day1.html#part2/0","title":"Day1.part2/0","type":"function","doc":"Solves day 1 part 2"},{"ref":"Day1.html#real_input/0","title":"Day1.real_input/0","type":"function","doc":"Reads the file inputs/input-1-1.txt"},{"ref":"Day1.html#sample/0","title":"Day1.sample/0","type":"function","doc":"Solves day 1 part 1 for sample input"},{"ref":"Day1.html#solve/1","title":"Day1.solve/1","type":"function","doc":"Given a list of ints will calculate the fuel for each and sum the result uses calculate_fuel/1 to calculate fuel"},{"ref":"Day1.html#solve2/1","title":"Day1.solve2/1","type":"function","doc":"Given a list of ints will calculate the fuel + additional fuel for each and sum the result uses calculate_additional_fuel/1 to calculate fuel"},{"ref":"GraphUtils.html","title":"GraphUtils","type":"module","doc":""},{"ref":"GraphUtils.html#bfs/2","title":"GraphUtils.bfs/2","type":"function","doc":"From wikipedia, a BFS is: 1 procedure BFS(G,start_v): 2 let Q be a queue 3 label start_v as discovered 4 Q.enqueue(start_v) 5 while Q is not empty 6 v = Q.dequeue() 7 if v is the goal: 8 return v 9 for all edges from v to w in G.adjacentEdges(v) do 10 if w is not labeled as discovered: 11 label w as discovered 12 w.parent = v 13 Q.enqueue(w) but the challenge is to accomplish this w/ recursion The data structures we&#39;ll need to keep around are a queue, a map of discovered nodes, the current path We can overload the last two as a single map, with the map being from node -&gt; parent, where existing in the map indicates a node is discovered. The initial node with have a value of :start to indicate it has no parent We&#39;ll also take a function of v to return edges"},{"ref":"GraphUtils.html#get_path/2","title":"GraphUtils.get_path/2","type":"function","doc":""},{"ref":"ListUtils.html","title":"ListUtils","type":"module","doc":"from: https://github.com/reeesga/elixir-rotate-lists/blob/master/lib/list_rotation.ex"},{"ref":"ListUtils.html#left_rotate/2","title":"ListUtils.left_rotate/2","type":"function","doc":""},{"ref":"ListUtils.html#right_rotate/2","title":"ListUtils.right_rotate/2","type":"function","doc":""},{"ref":"MatrixUtils.html","title":"MatrixUtils","type":"module","doc":""},{"ref":"MatrixUtils.html#apply_to_sub_rect/6","title":"MatrixUtils.apply_to_sub_rect/6","type":"function","doc":""},{"ref":"MatrixUtils.html#shift_col/3","title":"MatrixUtils.shift_col/3","type":"function","doc":"Shifts a given column by a certain amount"},{"ref":"MatrixUtils.html#shift_row/3","title":"MatrixUtils.shift_row/3","type":"function","doc":"Shifts a given row by a certain amount Here we just transpose then shift col then transpose"},{"ref":"Utils.html","title":"Utils","type":"module","doc":"Documentation for Aoc2016."},{"ref":"Utils.html#get_input/2","title":"Utils.get_input/2","type":"function","doc":"Hello world. Examples iex&gt; Aoc2016.hello() :world"},{"ref":"Utils.html#md5/1","title":"Utils.md5/1","type":"function","doc":""},{"ref":"Utils.html#permutations/1","title":"Utils.permutations/1","type":"function","doc":""},{"ref":"Utils.html#sample/2","title":"Utils.sample/2","type":"function","doc":""},{"ref":"Utils.html#swap/3","title":"Utils.swap/3","type":"function","doc":""},{"ref":"Utils.html#time/1","title":"Utils.time/1","type":"function","doc":""}]